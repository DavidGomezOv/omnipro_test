// Mocks generated by Mockito 5.3.2 from annotations
// in omnipro_test/test/src/core/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:omnipro_test/src/home/api/datasource/home_datasource.dart'
    as _i5;
import 'package:omnipro_test/src/home/api/repository/home_repository.dart'
    as _i2;
import 'package:omnipro_test/src/home/model/item_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i2.HomeRepository {
  @override
  _i3.Future<List<_i4.ItemModel>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i3.Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]),
      ) as _i3.Future<List<_i4.ItemModel>>);
}

/// A class which mocks [HomeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeDataSource extends _i1.Mock implements _i5.HomeDataSource {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.Future<List<_i4.ItemModel>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i3.Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]),
      ) as _i3.Future<List<_i4.ItemModel>>);
  @override
  _i3.Future<bool> validateConnection() => (super.noSuchMethod(
        Invocation.method(
          #validateConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
